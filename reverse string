class Solution {
public:
    int reverse(int x) {
        long long reversedNum = 0; // Use long long to detect overflow

        while (x != 0) {
            int digit = x % 10; // Extract the last digit
            reversedNum = reversedNum * 10 + digit; // Build the reversed number
            x /= 10; // Remove the last digit from the original number

            // Check for overflow before the next iteration
            if (reversedNum > INT_MAX || reversedNum < INT_MIN) {
                return 0; // Return 0 if overflow occurs
            }
        }
        return (int)reversedNum; // Cast back to int and return
    }
};
